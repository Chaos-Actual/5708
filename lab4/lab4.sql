SET LINESIZE 10000;
set pagesize 1000;

/home/mcgu0156/Desktop/5708/5708/lab3/lab2.sql
module load soft/oracle
sqlplus S18C5708G26@o12g/S18C5708G26
sqlplus S18C5708G27@o12g/S18C5708G27

--Part A

CREATE TABLE movie08 (id INTEGER NOT NULL, title VARCHAR(100), yr DECIMAL(4), score FLOAT,  votes INTEGER, director VARCHAR(100), PRIMARY KEY (id) );

INSERT INTO movie08	SELECT * FROM movie	COMMIT;

SELECT TABLE_NAME, GRANTOR, GRANTEE, PRIVILEGE, GRANTABLE, TABLE_SCHEMA FROM ALL_TAB_PRIVS WHERE GRANTOR= 'S18C5708G8';

REVOKE SELECT ON MOVIE08 FROM S18C5708G27;

-- A
S18C5708G8

-- B
S18C5708G26@o12g/S18C5708G26


-- C
S18C5708G27@o12g/S18C5708G27


SELECT * FROM sysusers
--1 
CREATE VIEW MOVIE08VW AS SELECT * FROM MOVIE08 WHERE YR = 1955;
GRANT SELECT ON  MOVIE08VW TO S18C5708G27;
--SELECT count(*) FROM S18C5708G8.movie08; 

--2
CREATE VIEW MOVIE08VW1965 AS SELECT * FROM MOVIE08 WHERE YR = 1965;
GRANT SELECT ON MOVIE08VW1965 TO PUBLIC;

--SELECT * FROM S18C5708G8.MOVIE08VW1965;


--3 
GRANT SELECT, DELETE , UPDATE (id, title, yr, votes) ON MOVIE08 TO S18C5708G26;
/*
UPDATE S18C5708G8.movie08 SET VOTES = 1 WHERE TITLE = 'Crack in the World';
SELECT * FROM  S18C5708G8.movie08  WHERE TITLE = 'Crack in the World';
DELETE FROM S18C5708G8.movie08  WHERE TITLE = 'Crack in the World';
*/

--4 
--AS USER A
GRANT SELECT, INSERT ON movie08 TO S18C5708G26 WITH GRANT OPTION;

-- AS USER B
GRANT SELECT, INSERT ON S18C5708G8.movie08 TO S18C5708G27;

-- AS USER A 
REVOKE SELECT, INSERT ON MOVIE08 FROM S18C5708G26;

/*User B gets an error for insufficient permissions and User C gets an error for the table does not exist after user a revokes user b's 
permission. Both B and C were able to view the table with the correct permissions. This shows that user C losses his permissions when A revokes B.

*/


