ANALYZE TABLE movie COMPUTE STATISTICS;
ANALYZE TABLE actor COMPUTE STATISTICS;
ANALYZE TABLE casting COMPUTE STATISTICS;
/* Part B */
--Q1
EXPLAIN PLAN SET STATEMENT_ID = 'B1' FOR SELECT DIRECTOR FROM MOVIE WHERE VOTES BETWEEN 5 AND 16;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','B1'));

--Q2
EXPLAIN PLAN SET STATEMENT_ID = 'B2' FOR SELECT DIRECTOR FROM MOVIE WHERE VOTES BETWEEN 500 AND 15000;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','B2'));


/* Part C */
--Q1
EXPLAIN PLAN SET STATEMENT_ID = 'C1' FOR SELECT TITLE FROM MOVIE WHERE VOTES < 2000;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','C1'));

--Q2
EXPLAIN PLAN SET STATEMENT_ID = 'C2' FOR SELECT TITLE FROM MOVIE WHERE VOTES BETWEEN 50000 AND 100000;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','C2'));

--Q3
EXPLAIN PLAN SET STATEMENT_ID = 'C3' FOR SELECT TITLE FROM MOVIE WHERE YR BETWEEN 1900 AND 1950;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','C3'));

--Q4
EXPLAIN PLAN SET STATEMENT_ID = 'C4' FOR SELECT TITLE FROM MOVIE WHERE YR BETWEEN 1950 AND 1955;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','C4'));


/* Part D */
CREATE INDEX ACTOR_NAME ON ACTOR(NAME);
--Q1
EXPLAIN PLAN SET STATEMENT_ID = 'D1' FOR SELECT name FROM actor WHERE name LIKE 'M%';
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','D1'));

--Q2
EXPLAIN PLAN SET STATEMENT_ID = 'D2' FOR SELECT name FROM actor WHERE name LIKE '%m';
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','D2'));

--Q3
EXPLAIN PLAN SET STATEMENT_ID = 'D3' FOR SELECT name FROM actor WHERE substr(name, 1, 1) = 'M';
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','D3'));

--Q4
EXPLAIN PLAN SET STATEMENT_ID = 'D4' FOR SELECT name FROM actor WHERE name LIKE '%m%';
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','D4'));


/* Part E */
--Q1
EXPLAIN PLAN SET STATEMENT_ID = 'E1' FOR SELECT DIRECTOR FROM MOVIE WHERE VOTES <= (SELECT MIN(VOTES) FROM MOVIE);
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','E1'));

---Q2
EXPLAIN PLAN SET STATEMENT_ID = 'E2' FOR SELECT DIRECTOR FROM MOVIE WHERE VOTES <= ALL (SELECT VOTES FROM MOVIE);
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','E2'));

/* Part F */
--Q1
EXPLAIN PLAN SET STATEMENT_ID = 'F1' FOR SELECT title FROM movie WHERE votes > (SELECT votes FROM movie WHERE title = 'Kingpin');
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','F1'));

--Q2
EXPLAIN PLAN SET STATEMENT_ID = 'F2' FOR SELECT m1.title FROM movie m1, movie m2 WHERE m1.votes > m2.votes AND m2.title = 'Kingpin';
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','F2'));

/* Part G */
CREATE INDEX actor_id ON actor(id);
--Q1
EXPLAIN PLAN SET STATEMENT_ID = 'G1' FOR SELECT m.title, c.actor_id FROM casting c, movie m WHERE m.id=c.movie_id AND c.ord = 2;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','G1'));

--Q2
EXPLAIN PLAN SET STATEMENT_ID = 'G2' FOR SELECT /*+ USE_MERGE (c m) */ m.title, c.actor_id FROM casting c, movie m WHERE m.id=c.movie_id AND c.ord = 2;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','G2'));

--Q3
EXPLAIN PLAN SET STATEMENT_ID = 'G3' FOR SELECT /*+ ORDERED USE_NL (m) */ m.title, c.actor_id FROM casting c, movie m WHERE m.id=c.movie_id AND c.ord = 2;
SELECT * FROM TABLE (DBMS_XPLAN. DISPLAY('plan_table','G3'));

/* Part H */
